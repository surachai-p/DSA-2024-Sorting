import random
import time

# ฟังก์ชัน Shell Sort
def shell_sort_with_steps(arr):
    n = len(arr)
    gap = n // 2
    
    print(f"เริ่มต้น: {arr}")
    
    while gap > 0:
        print(f"\nกำหนดระยะห่าง (gap) = {gap}")
        
        for i in range(gap, n):
            temp = arr[i]
            j = i
            
            print(f"  พิจารณาตำแหน่ง {i} (ค่า {temp}):")
            
            while j >= gap and arr[j - gap] > temp:
                print(f"    เปรียบเทียบกับตำแหน่ง {j-gap} (ค่า {arr[j-gap]}) -> ย้าย {arr[j-gap]} ไปตำแหน่ง {j}")
                arr[j] = arr[j - gap]
                j -= gap
            
            if j != i:
                print(f"    ใส่ {temp} ลงในตำแหน่ง {j}")
                arr[j] = temp
            else:
                print(f"    ไม่มีการเปลี่ยนแปลง")
            
            print(f"    ข้อมูลหลังการพิจารณา: {arr}")
        
        gap //= 2
    
    return arr


# ฟังก์ชัน Insertion Sort
def insertion_sort_with_steps(arr):
    print(f"เริ่มต้น: {arr}")
    for i in range(1, len(arr)):
        key = arr[i]
        j = i - 1
        
        print(f"\nรอบที่ {i}: พิจารณา key = {key}")
        
        while j >= 0 and arr[j] > key:
            print(f"  เปรียบเทียบ {arr[j]} กับ key = {key} -> ย้าย {arr[j]} ไปตำแหน่ง {j+1}")
            arr[j + 1] = arr[j]
            j -= 1
        
        arr[j + 1] = key
        print(f"  แทรก {key} ลงในตำแหน่ง {j+1}: {arr}")
    
    return arr


# สร้างชุดข้อมูลเกือบเรียงลำดับ
def nearly_sorted_data(size, swaps=2):
    data = list(range(size))
    for _ in range(swaps):
        # สลับสองตำแหน่งสุ่ม
        i, j = random.sample(range(size), 2)
        data[i], data[j] = data[j], data[i]
    return data

# ทดสอบ Shell Sort และ Insertion Sort กับชุดข้อมูลเกือบเรียงลำดับแล้ว
data_size = 1000  # ขนาดข้อมูลที่ใหญ่
test_data = nearly_sorted_data(data_size)

# วัดเวลาในการใช้ Shell Sort
start_time = time.time()
sorted_data_shell = shell_sort_with_steps(test_data.copy())
end_time = time.time()
print(f"\nShell Sort ใช้เวลา: {end_time - start_time} วินาที")

# วัดเวลาในการใช้ Insertion Sort
start_time = time.time()
sorted_data_insertion = insertion_sort_with_steps(test_data.copy())
end_time = time.time()
print(f"\nInsertion Sort ใช้เวลา: {end_time - start_time} วินาที")
